// Code generated by goa v3.19.1, DO NOT EDIT.
//
// frpc endpoints
//
// Command:
// $ goa gen github.com/woxQAQ/frp-webconsole/api -o pkg

package frpc

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Endpoints wraps the "frpc" service endpoints.
type Endpoints struct {
	ListFrpRelease goa.Endpoint
}

// NewEndpoints wraps the methods of the "frpc" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		ListFrpRelease: NewListFrpReleaseEndpoint(s),
	}
}

// Use applies the given middleware to all the "frpc" service endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.ListFrpRelease = m(e.ListFrpRelease)
}

// NewListFrpReleaseEndpoint returns an endpoint function that calls the method
// "ListFrpRelease" of service "frpc".
func NewListFrpReleaseEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*ListFrpReleasePayload)
		return s.ListFrpRelease(ctx, p)
	}
}
